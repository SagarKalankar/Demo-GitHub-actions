name: Automated functional testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build and Test with Gradle
      run: ./gradlew build
    
    - name: Build the Docker Image
      run: docker build . --file Dockerfile --tag demo-app
    
    - name: Create Docker Network
      run: docker network create docker-network || true
    
    - name: Start Services
      run: docker compose up -d
    
    - name: Wait for Services to be Ready
      run: |
        # Add a wait mechanism
        for i in {1..30}; do
          docker compose ps | grep "Up" && break
          sleep 2
        done
        docker compose logs
    
    - name: Resolve Hostname
      run: |
        # Debug DNS resolution
        cat /etc/hosts
        cat /etc/resolv.conf
        ping -c 4 localhost
        docker network inspect docker-network
        docker inspect demo-github-actions-demo
    
    - name: Run Postman Tests
      run: |
        # Try multiple approaches
        docker run --rm \
          --network host \
          -v ${{ github.workspace }}:/etc/newman \
          postman/newman:latest run /etc/newman/postman_collection.json \
          -e /etc/newman/postman_environment.json \
          --reporters cli,json \
          --reporter-json-export /etc/newman/newman-report.json
      continue-on-error: true
    
    - name: Alternative Test Method
      run: |
        # Use IP instead of hostname
        CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' demo-github-actions-demo)
        sed -i "s|http://demo:8080|http://$CONTAINER_IP:8080|g" postman_environment.json
        
        docker run --rm \
          --network docker-network \
          -v ${{ github.workspace }}:/etc/newman \
          postman/newman:latest run /etc/newman/postman_collection.json \
          -e /etc/newman/postman_environment.json \
          --reporters cli,json \
          --reporter-json-export /etc/newman/newman-report.json
      continue-on-error: true
    
    - name: Cleanup
      run: docker compose down
      if: always()