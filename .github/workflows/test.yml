name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - uses: actions/checkout@v4  # Check out the code from the repository

    # Step 2: Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Step 3: Set execute permission for gradlew
    - name: Set execute permission for gradlew
      run: chmod +x ./gradlew  # Give permission to the Gradle wrapper

    # Step 4: Set up Gradle
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4  # Set up Gradle

    # Step 5: Build the project using Gradle
    - name: Run Gradle Build
      run: ./gradlew build  # Build the project

    # Step 6: Start Services with Docker Compose
     # Login into container registry
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
       registry: ghcr.io
       username: ${{ github.actor }}
       password: ${{ secrets.GITHUB_TOKEN }}

   # Run container image of application
    - name: Run application in container
      run: |
       docker rm -f demo-github-actions-demo || true
       docker rm -f postgres:latest || true
       docker container prune --force || true
       docker compose up -d

    - name: Wait 60 seconds to start application
      run: sleep 60

    # Step 7: Run Postman Tests with Newman (Official Docker Image)
    - name: Run Postman Tests with Newman
      run: |
        docker-compose exec newman newman run /etc/newman/postman_collection.json \
          --environment /etc/newman/postman_environment.json \
          --reporters cli,json \
          --reporter-json-export /etc/newman/newman-report.json

    # Step 8: Publish Test Results to GitHub Packages (optional)
    - name: Publish Test Results to GitHub Packages
      run: |
        docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
        docker tag demo ghcr.io/${{ github.repository }}/demo-app:latest
        docker push ghcr.io/${{ github.repository }}/demo-app:latest

    # Step 9: Clean up Docker Compose
    - name: Clean up Docker Compose
      run: docker-compose down --volumes  # Stop and remove all services and volumes
